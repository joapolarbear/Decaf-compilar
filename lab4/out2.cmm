.data
_prompt: .asciiz "Enter an integer:"
_ret: .asciiz "\n"
.globl main
.text

read:
subu $sp, $sp, 8
sw $ra, 4($sp)
sw $fp, 0($sp)
addi $fp, $sp, 8
li $v0, 4
la $a0, _prompt
syscall
li $v0, 5
syscall
subu $sp, $fp, 8
lw $ra, 4($sp)
lw $fp, 0($sp)
jr $ra

write:
subu $sp, $sp, 8
sw $ra, 4($sp)
sw $fp, 0($sp)
addi $fp, $sp, 8
li $v0, 1
syscall
li $v0, 4
la $a0, _ret
syscall
subu $sp, $fp, 8
lw $ra, 4($sp)
lw $fp, 0($sp)
move $v0, $0
jr $ra

_main_New:
subu $sp, $sp, 8
sw $ra, 4($sp)
sw $fp, 0($sp)
addi $fp, $sp, 8
subu $t0, $fp, 28
move $t2, $t1
sw $t2, 0($t0)
subu $sp, $fp, 8
lw $ra, 4($sp)
lw $fp, 0($sp)
move $v0, $t0
jr $ra

_main_fact:
subu $sp, $sp, 8
sw $ra, 4($sp)
sw $fp, 0($sp)
addi $fp, $sp, 8
move $a0, $t0
li $t1, 1
bne $t0, $t1, label1
label0:
subu $sp, $fp, 8
lw $ra, 4($sp)
lw $fp, 0($sp)
move $v0, $t0
jr $ra
j label2
label1:
addi $t2, $t0, -1
subu $v1, $fp, 16
sw $t2, 0($v1)
subu $v1, $fp, 12
sw $t0, 0($v1)
subu $sp, $fp, 16
subu $v1, $fp, 16
lw $t0, 0($v1)
move $a0, $t0
jal _main_fact
move $t2, $v0
subu $v1, $fp, 12
lw $t3, 0($v1)
mul $t4, $t3, $t2
subu $sp, $fp, 8
lw $ra, 4($sp)
lw $fp, 0($sp)
move $v0, $t4
jr $ra
label2:

main:
subu $sp, $sp, 8
sw $ra, 4($sp)
sw $fp, 0($sp)
addi $fp, $sp, 8
subu $sp, $fp, 8
jal read
move $t0, $v0
move $t1, $t0
li $t2, 1
blt $t1, $t2, label4
label3:
subu $v1, $fp, 16
sw $t1, 0($v1)
subu $v1, $fp, 12
sw $t0, 0($v1)
subu $sp, $fp, 16
subu $v1, $fp, 16
lw $t0, 0($v1)
move $a0, $t0
jal _main_fact
move $t1, $v0
j label5
label4:
li $t3, 1
move $t1, $t3
label5:
subu $sp, $fp, 20
move $a0, $t1
jal write
subu $sp, $fp, 8
lw $ra, 4($sp)
lw $fp, 0($sp)
move $v0, $0
jr $ra
